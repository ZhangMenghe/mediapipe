# MediaPipe graph that performs hair segmentation with TensorFlow Lite on GPU.
# Used in the example in
# mediapipie/examples/android/src/java/com/mediapipe/apps/hairsegmentationgpu.

# Images on GPU coming into and out of the graph.
input_stream: "input_video"
output_stream: "output_video"

# Throttles the images flowing downstream for flow control. It passes through
# the very first incoming image unaltered, and waits for
# TfLiteTensorsToSegmentationCalculator downstream in the graph to finish
# generating the corresponding hair mask before it passes through another
# image. All images that come in while waiting are dropped, limiting the number
# of in-flight images between this calculator and
# TfLiteTensorsToSegmentationCalculator to 1. This prevents the nodes in between
# from queuing up incoming images and data excessively, which leads to increased
# latency and memory usage, unwanted in real-time mobile applications. It also
# eliminates unnecessarily computation, e.g., a transformed image produced by
# ImageTransformationCalculator may get dropped downstream if the subsequent
# TfLiteConverterCalculator or TfLiteInferenceCalculator is still busy
# processing previous inputs.
node {
  calculator: "FlowLimiterCalculator"
  input_stream: "input_video"
  input_stream: "FINISHED:hair_mask"
  input_stream_info: {
    tag_index: "FINISHED"
    back_edge: true
  }
  output_stream: "throttled_input_video"
}
# Defines side packets for further use in the graph.
node {
  calculator: "ConstantSidePacketCalculator"
  output_side_packet: "PACKET:num_faces"
  node_options: {
    [type.googleapis.com/mediapipe.ConstantSidePacketCalculatorOptions]: {
      packet { int_value: 1 }
    }
  }
}
node: {
  calculator: "FaceLandmarkFrontGpu"
  input_stream: "IMAGE:throttled_input_video"
  input_side_packet: "NUM_FACES:num_faces"
  output_stream: "LANDMARKS:multi_face_landmarks"
  output_stream: "ROIS_FROM_LANDMARKS:face_rects_from_landmarks"
  output_stream: "DETECTIONS:face_detections"
  output_stream: "ROIS_FROM_DETECTIONS:face_rects_from_detections"
}

# Transforms the input image on GPU to a 512x512 image. To scale the image, by
# default it uses the STRETCH scale mode that maps the entire input image to the
# entire transformed image. As a result, image aspect ratio may be changed and
# objects in the image may be deformed (stretched or squeezed), but the hair
# segmentation model used in this graph is agnostic to that deformation.
node: {
  calculator: "ImageTransformationCalculator"
  input_stream: "IMAGE_GPU:throttled_input_video"
  output_stream: "IMAGE_GPU:transformed_input_video"
  node_options: {
    [type.googleapis.com/mediapipe.ImageTransformationCalculatorOptions] {
      output_width: 512
      output_height: 512
    }
  }
}

# Caches a mask fed back from the previous round of hair segmentation, and upon
# the arrival of the next input image sends out the cached mask with the
# timestamp replaced by that of the input image, essentially generating a packet
# that carries the previous mask. Note that upon the arrival of the very first
# input image, an empty packet is sent out to jump start the feedback loop.
node {
  calculator: "PreviousLoopbackCalculator"
  input_stream: "MAIN:throttled_input_video"
  input_stream: "LOOP:hair_mask"
  input_stream_info: {
    tag_index: "LOOP"
    back_edge: true
  }
  output_stream: "PREV_LOOP:previous_hair_mask"
}

# Embeds the hair mask generated from the previous round of hair segmentation
# as the alpha channel of the current input image.
node {
  calculator: "SetAlphaCalculator"
  input_stream: "IMAGE_GPU:transformed_input_video"
  input_stream: "ALPHA_GPU:previous_hair_mask"
  output_stream: "IMAGE_GPU:mask_embedded_input_video"
}

# Converts the transformed input image on GPU into an image tensor stored in
# tflite::gpu::GlBuffer. The zero_center option is set to false to normalize the
# pixel values to [0.f, 1.f] as opposed to [-1.f, 1.f]. With the
# max_num_channels option set to 4, all 4 RGBA channels are contained in the
# image tensor.
node {
  calculator: "TfLiteConverterCalculator"
  input_stream: "IMAGE_GPU:mask_embedded_input_video"
  output_stream: "TENSORS_GPU:image_tensor"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteConverterCalculatorOptions] {
      zero_center: false
      max_num_channels: 4
    }
  }
}

# Generates a single side packet containing a TensorFlow Lite op resolver that
# supports custom ops needed by the model used in this graph.
node {
  calculator: "TfLiteCustomOpResolverCalculator"
  output_side_packet: "op_resolver"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteCustomOpResolverCalculatorOptions] {
      use_gpu: true
    }
  }
}

# Runs a TensorFlow Lite model on GPU that takes an image tensor and outputs a
# tensor representing the hair segmentation, which has the same width and height
# as the input image tensor.
node {
  calculator: "TfLiteInferenceCalculator"
  input_stream: "TENSORS_GPU:image_tensor"
  output_stream: "TENSORS_GPU:segmentation_tensor"
  input_side_packet: "CUSTOM_OP_RESOLVER:op_resolver"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteInferenceCalculatorOptions] {
      model_path: "mediapipe/models/hair_segmentation.tflite"
      use_gpu: true
    }
  }
}

# Decodes the segmentation tensor generated by the TensorFlow Lite model into a
# mask of values in [0.f, 1.f], stored in the R channel of a GPU buffer. It also
# takes the mask generated previously as another input to improve the temporal
# consistency.
node {
  calculator: "TfLiteTensorsToSegmentationCalculator"
  input_stream: "TENSORS_GPU:segmentation_tensor"
  input_stream: "PREV_MASK_GPU:previous_hair_mask"
  output_stream: "MASK_GPU:hair_mask"
  node_options: {
    [type.googleapis.com/mediapipe.TfLiteTensorsToSegmentationCalculatorOptions] {
      tensor_width: 512
      tensor_height: 512
      tensor_channels: 2
      combine_with_previous_ratio: 0.9
      output_layer_index: 1
    }
  }
}

# # Colors the hair segmentation with the color specified in the option.
# node {
#   calculator: "RecolorCalculator"
#   input_stream: "IMAGE_GPU:throttled_input_video"
#   input_stream: "MASK_GPU:hair_mask"
#   output_stream: "IMAGE_GPU:output_video"
#   node_options: {
#     [type.googleapis.com/mediapipe.RecolorCalculatorOptions] {
#       color { r: 0 g: 0 b: 255 }
#       mask_channel: RED
#     }
#   }
# }
# Subgraph that renders face-landmark annotation onto the input image.
node {
  calculator: "BeginLoopNormalizedLandmarkListVectorCalculator"
  input_stream: "ITERABLE:multi_face_landmarks"
  output_stream: "ITEM:face_landmarks"
  output_stream: "BATCH_END:end_timestamp"
}
# Converts landmarks to drawing primitives for annotation overlay.
node {
  calculator: "LandmarksToRenderDataCalculator"
  input_stream: "NORM_LANDMARKS:face_landmarks"
  output_stream: "RENDER_DATA:landmarks_render_data"
  node_options: {
    [type.googleapis.com/mediapipe.LandmarksToRenderDataCalculatorOptions] {
      # Lips.
      landmark_connections: 61
      landmark_connections: 146
      landmark_connections: 146
      landmark_connections: 91
      landmark_connections: 91
      landmark_connections: 181
      landmark_connections: 181
      landmark_connections: 84
      landmark_connections: 84
      landmark_connections: 17
      landmark_connections: 17
      landmark_connections: 314
      landmark_connections: 314
      landmark_connections: 405
      landmark_connections: 405
      landmark_connections: 321
      landmark_connections: 321
      landmark_connections: 375
      landmark_connections: 375
      landmark_connections: 291
      landmark_connections: 61
      landmark_connections: 185
      landmark_connections: 185
      landmark_connections: 40
      landmark_connections: 40
      landmark_connections: 39
      landmark_connections: 39
      landmark_connections: 37
      landmark_connections: 37
      landmark_connections: 0
      landmark_connections: 0
      landmark_connections: 267
      landmark_connections: 267
      landmark_connections: 269
      landmark_connections: 269
      landmark_connections: 270
      landmark_connections: 270
      landmark_connections: 409
      landmark_connections: 409
      landmark_connections: 291
      landmark_connections: 78
      landmark_connections: 95
      landmark_connections: 95
      landmark_connections: 88
      landmark_connections: 88
      landmark_connections: 178
      landmark_connections: 178
      landmark_connections: 87
      landmark_connections: 87
      landmark_connections: 14
      landmark_connections: 14
      landmark_connections: 317
      landmark_connections: 317
      landmark_connections: 402
      landmark_connections: 402
      landmark_connections: 318
      landmark_connections: 318
      landmark_connections: 324
      landmark_connections: 324
      landmark_connections: 308
      landmark_connections: 78
      landmark_connections: 191
      landmark_connections: 191
      landmark_connections: 80
      landmark_connections: 80
      landmark_connections: 81
      landmark_connections: 81
      landmark_connections: 82
      landmark_connections: 82
      landmark_connections: 13
      landmark_connections: 13
      landmark_connections: 312
      landmark_connections: 312
      landmark_connections: 311
      landmark_connections: 311
      landmark_connections: 310
      landmark_connections: 310
      landmark_connections: 415
      landmark_connections: 415
      landmark_connections: 308
      # Left eye.
      landmark_connections: 33
      landmark_connections: 7
      landmark_connections: 7
      landmark_connections: 163
      landmark_connections: 163
      landmark_connections: 144
      landmark_connections: 144
      landmark_connections: 145
      landmark_connections: 145
      landmark_connections: 153
      landmark_connections: 153
      landmark_connections: 154
      landmark_connections: 154
      landmark_connections: 155
      landmark_connections: 155
      landmark_connections: 133
      landmark_connections: 33
      landmark_connections: 246
      landmark_connections: 246
      landmark_connections: 161
      landmark_connections: 161
      landmark_connections: 160
      landmark_connections: 160
      landmark_connections: 159
      landmark_connections: 159
      landmark_connections: 158
      landmark_connections: 158
      landmark_connections: 157
      landmark_connections: 157
      landmark_connections: 173
      landmark_connections: 173
      landmark_connections: 133
      # Left eyebrow.
      landmark_connections: 46
      landmark_connections: 53
      landmark_connections: 53
      landmark_connections: 52
      landmark_connections: 52
      landmark_connections: 65
      landmark_connections: 65
      landmark_connections: 55
      landmark_connections: 70
      landmark_connections: 63
      landmark_connections: 63
      landmark_connections: 105
      landmark_connections: 105
      landmark_connections: 66
      landmark_connections: 66
      landmark_connections: 107
      # Right eye.
      landmark_connections: 263
      landmark_connections: 249
      landmark_connections: 249
      landmark_connections: 390
      landmark_connections: 390
      landmark_connections: 373
      landmark_connections: 373
      landmark_connections: 374
      landmark_connections: 374
      landmark_connections: 380
      landmark_connections: 380
      landmark_connections: 381
      landmark_connections: 381
      landmark_connections: 382
      landmark_connections: 382
      landmark_connections: 362
      landmark_connections: 263
      landmark_connections: 466
      landmark_connections: 466
      landmark_connections: 388
      landmark_connections: 388
      landmark_connections: 387
      landmark_connections: 387
      landmark_connections: 386
      landmark_connections: 386
      landmark_connections: 385
      landmark_connections: 385
      landmark_connections: 384
      landmark_connections: 384
      landmark_connections: 398
      landmark_connections: 398
      landmark_connections: 362
      # Right eyebrow.
      landmark_connections: 276
      landmark_connections: 283
      landmark_connections: 283
      landmark_connections: 282
      landmark_connections: 282
      landmark_connections: 295
      landmark_connections: 295
      landmark_connections: 285
      landmark_connections: 300
      landmark_connections: 293
      landmark_connections: 293
      landmark_connections: 334
      landmark_connections: 334
      landmark_connections: 296
      landmark_connections: 296
      landmark_connections: 336
      # Face oval.
      landmark_connections: 10
      landmark_connections: 338
      landmark_connections: 338
      landmark_connections: 297
      landmark_connections: 297
      landmark_connections: 332
      landmark_connections: 332
      landmark_connections: 284
      landmark_connections: 284
      landmark_connections: 251
      landmark_connections: 251
      landmark_connections: 389
      landmark_connections: 389
      landmark_connections: 356
      landmark_connections: 356
      landmark_connections: 454
      landmark_connections: 454
      landmark_connections: 323
      landmark_connections: 323
      landmark_connections: 361
      landmark_connections: 361
      landmark_connections: 288
      landmark_connections: 288
      landmark_connections: 397
      landmark_connections: 397
      landmark_connections: 365
      landmark_connections: 365
      landmark_connections: 379
      landmark_connections: 379
      landmark_connections: 378
      landmark_connections: 378
      landmark_connections: 400
      landmark_connections: 400
      landmark_connections: 377
      landmark_connections: 377
      landmark_connections: 152
      landmark_connections: 152
      landmark_connections: 148
      landmark_connections: 148
      landmark_connections: 176
      landmark_connections: 176
      landmark_connections: 149
      landmark_connections: 149
      landmark_connections: 150
      landmark_connections: 150
      landmark_connections: 136
      landmark_connections: 136
      landmark_connections: 172
      landmark_connections: 172
      landmark_connections: 58
      landmark_connections: 58
      landmark_connections: 132
      landmark_connections: 132
      landmark_connections: 93
      landmark_connections: 93
      landmark_connections: 234
      landmark_connections: 234
      landmark_connections: 127
      landmark_connections: 127
      landmark_connections: 162
      landmark_connections: 162
      landmark_connections: 21
      landmark_connections: 21
      landmark_connections: 54
      landmark_connections: 54
      landmark_connections: 103
      landmark_connections: 103
      landmark_connections: 67
      landmark_connections: 67
      landmark_connections: 109
      landmark_connections: 109
      landmark_connections: 10
      landmark_color { r: 255 g: 0 b: 0 }
      connection_color { r: 0 g: 255 b: 0 }
      thickness: 2
      visualize_landmark_depth: false
    }
  }
}
node {
  calculator: "EndLoopRenderDataCalculator"
  input_stream: "ITEM:landmarks_render_data"
  input_stream: "BATCH_END:end_timestamp"
  output_stream: "ITERABLE:multi_face_landmarks_render_data"
}
node {
  calculator: "FaceMergeCalculator"
  input_stream: "IMAGE_GPU:throttled_input_video"
  input_stream: "MASK_GPU:hair_mask"
  input_stream: "VECTOR:0:multi_face_landmarks_render_data"
  input_stream: "NORM_RECTS:face_rects_from_landmarks"
  input_stream: "DETECTIONS:face_detections"
  output_stream: "IMAGE_GPU:output_video"
  node_options: {
    [type.googleapis.com/mediapipe.RecolorCalculatorOptions] {
      color { r: 0 g: 0 b: 255 }
      mask_channel: RED
    }
  }
}
